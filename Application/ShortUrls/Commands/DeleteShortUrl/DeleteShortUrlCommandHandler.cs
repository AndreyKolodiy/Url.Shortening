using Application.Common.Exceptions;using Application.Interfaces;using MediatR;namespace Application.ShortUrls.Commands.DeleteShortUrl;public class DeleteShortUrlCommandHandler : IRequestHandler<DeleteShortUrlCommand>{    private readonly IShortUrlDbContext _dbContext;    public DeleteShortUrlCommandHandler(IShortUrlDbContext dbContext) =>        _dbContext = dbContext;    public async Task<Unit> Handle(DeleteShortUrlCommand request, CancellationToken cancellationToken)    {        var entity = await _dbContext.ShortUrls.FindAsync(new object[] { request.Path }, cancellationToken);        if (entity == null) { throw new NotFoundException(nameof(ShortUrls), request.Path); }        entity.Path = request.Path;        _dbContext.ShortUrls.Remove(entity);        await _dbContext.SaveChangesAsync(cancellationToken);        return Unit.Value;    }}